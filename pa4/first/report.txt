Cache report:
I used a cache pointer that consists of 2D multiple block pointers. I attempted to use a hash table with a linked list, but  Reza said the formatting of the fifo was more efficient with this cache. The cache is considered the structure **block with indecies that are calculated using the calculation from the addresses. A couple of string chars are present, to manipulate the inputs. The blocks consists of time, tag, and status. The time refers to the order of recently used blocks, tag refers to a number that can be used to recognize the block. The first pointer of the cache points to a certain number of sets, while the second pointer points to the blocks. Tag is the respective tag of the of the block. Status refers to whether or not there is a tag present in the the set. To find a tag that is necessary in the set, placing the set index in the first setarray, and the tagindex in the second set array, finds the tag. I stored the number of hits and misses in integer variables by the name of final and finalM respectively.
 The prefetcher changed the hit and misses ratio greatly. Because more useful memory is present in the cache, the probabilty of a hit is extremely higher and reflects on the ratio of hits and misses. The reads has increased though because, with a prefetch there must be a larger memory read for each memory prefetched. Each prefetch requires a memory read, to find the next stored address, so the read has gone up. The idea of prefetcher is to either exploit temporal or spacial locality. The concept of spacial locality is exploited during this caches pre fetch. My program calls a helper method named plz to fetch the data that is one bit size address higher than the original address. This new address is placed in the cache and available for future use. Because the new information is by information already accessed it is more likely to be read and increases the amount of hits. Thank you.
